{"version":3,"sources":["components/menu.js","components/arena.js","components/hammer.js","components/score.js","components/option.js","App.js","reportWebVitals.js","index.js"],"names":["timeInterval","showTarget","transform","pointerEvents","hideTarget","Arena","props","useState","target","setTarget","targetClicked","play","time","addScore","changeStyle","hole","useEffect","className","style","cursor","onMouseMove","ev","setMousePos","onClick","setClicked","holes","map","src","process","alt","onDragStart","e","preventDefault","Menu","display","screen","setScreen","menuStyle","setMenuStyle","countStyle","setCountStyle","start","setStart","countdown","setCountdown","setInterval","prev","clearInterval","setPlay","Hammer","left","mousePos","top","deg","ScoreBoard","score","Option","xmlns","width","height","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","d","resetGame","x","y","rx","App","state","timer","bind","changeDeg","setTimer","this","setState","pageX","pageY","setTimeout","alert","randomNum","Math","floor","random","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39228a08.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nlet timeInterval;\r\n\r\nconst Menu = (props) => {\r\n    const [screen, setScreen] = useState({display: 'flex'});\r\n    const [menuStyle, setMenuStyle] = useState({display: 'block'});\r\n    const [countStyle, setCountStyle] = useState({display:'none'});\r\n    const [start, setStart] = useState(false);\r\n    const [countdown, setCountdown] = useState(3);\r\n\r\n    useEffect(() => {\r\n        if(start){\r\n            if(countdown > 0){\r\n                timeInterval = setInterval(() => {\r\n                    setCountdown(prev => prev -1);\r\n                }, 1000);\r\n            } else {\r\n                setStart(false);\r\n                clearInterval(timeInterval);\r\n                setScreen({display: 'none'});\r\n                setCountStyle({display: 'none'});\r\n                props.setPlay();\r\n            }\r\n        }\r\n        return () => clearInterval(timeInterval);\r\n\r\n    }, [props, countdown, start]);\r\n\r\n    function startGame() {\r\n        if(start === false) {\r\n            setStart(true);\r\n            setMenuStyle({display: 'none'});\r\n            setCountStyle({display: 'block'});\r\n        }\r\n    }\r\n\r\n    return(\r\n        \r\n    <div style={screen} className=\"startscreen\">\r\n        <h1 style={menuStyle}>Whack A Mole</h1>\r\n        <button \r\n            style={menuStyle} \r\n            className=\"btn start\"\r\n            onClick={startGame} >\r\n            Play!\r\n        </button>\r\n        <p \r\n        style={countStyle} \r\n        className=\"countdown\">\r\n            {countdown}\r\n        </p>\r\n        \r\n        <img \r\n            src={process.env.PUBLIC_URL + 'mole.png'}\r\n            alt=\"mole\"\r\n            className=\"mole-start\" \r\n            onDragStart={(e) => {e.preventDefault()}}\r\n        />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React, {useState, useEffect} from 'react';\r\n// import mole from '.../public/mole.png';\r\n\r\nconst showTarget = {\r\n    transform: 'scale(1, 1)',\r\n    pointerEvents: 'auto'\r\n}\r\n\r\nconst hideTarget = {\r\n    transform: 'scale(0, 0)',\r\n    pointerEvents: 'none'\r\n}\r\n\r\nconst Arena = (props) => {\r\n    // const [deg, setDeg] = useState('-45deg');\r\n    // const [mouse, setMouse] = useState();\r\n    const [target, setTarget] = useState(9);\r\n\r\n    useEffect(() => {\r\n        // const randomNum = Math.floor(Math.random() * 10);\r\n        if(props.play === true){\r\n            setTarget(props.target);\r\n        }\r\n    }, [props.target, props.play])\r\n\r\n    // function setMousePos(ev) {\r\n    //     console.log([ev.pageX, ev.pageY]);\r\n    //     setMouse([ev.pageX, ev.pageY]);\r\n    // }\r\n\r\n    // function setClicked() {\r\n    //     setDeg('-90deg');\r\n    //     setTimeout(function(){ setDeg('-45deg'); }, 200);\r\n    // }\r\n\r\n    // function generateNum() {\r\n    //     let randomNum = Math.floor(Math.random() * 10);\r\n    //     return randomNum > 8? 8: randomNum\r\n    // }\r\n\r\n    function targetClicked() {\r\n        if(props.play && props.time>0) {\r\n            props.addScore();\r\n            // let num = generateNum();\r\n            setTarget(9);\r\n        }\r\n    }\r\n\r\n    function changeStyle(hole) {\r\n        if(hole === target){\r\n            return showTarget;\r\n        } else {\r\n            return hideTarget;\r\n        }\r\n    }\r\n      \r\n    return (\r\n        <div className=\"bottom\" \r\n            style={{cursor: props.play? 'none': 'auto'}} \r\n            onMouseMove={(ev) => props.setMousePos(ev)}\r\n            onClick={props.setClicked}>\r\n            <div className=\"holes\">\r\n                {props.holes.map(hole => (\r\n                    <div key={hole} className=\"hole\">\r\n                        <img \r\n                            src={process.env.PUBLIC_URL + 'mole.png'}\r\n                            alt=\"mole\"\r\n                            className=\"target\" \r\n                            onClick={targetClicked} \r\n                            style={changeStyle(hole)}\r\n                            onDragStart={(e) => {e.preventDefault()}}\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Arena;","\r\n\r\nconst Hammer = (props) => {\r\n    return(\r\n        <div \r\n            className=\"hammer\" \r\n            style={{left: props.mousePos[0]+15+'px', top: props.mousePos[1]-50+'px', transform: `rotate(${props.deg}) translate(-50%, -50%)`, display: props.play? 'block': 'none'}}>\r\n            <div className=\"steel\"></div>\r\n            <div className=\"stick\"></div>\r\n        </div>\r\n    )\r\n}\r\n            \r\nexport default Hammer;","import React from \"react\";\r\n\r\nconst ScoreBoard = (props) => {\r\n    return(\r\n        <>\r\n            <p className=\"score\">{props.time}</p>\r\n            <p className=\"score\">{props.score}</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ScoreBoard;","const Option = (props) => {\r\n    return(\r\n        <div className=\"option\">\r\n        <button className=\"btn play\" onClick={props.setPlay}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"icon icon-tabler icon-tabler-player-play\" width=\"44\" height=\"44\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"#2c3e50\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                <path d=\"M7 4v16l13 -8z\" />\r\n            </svg>\r\n        </button>\r\n            <button className=\"btn stop\" onClick={props.resetGame}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"icon icon-tabler icon-tabler-player-stop\" width=\"44\" height=\"44\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"#2c3e50\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                <rect x=\"5\" y=\"5\" width=\"14\" height=\"14\" rx=\"2\" />\r\n            </svg>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Option;","import React from 'react';\nimport Arena from './components/arena';\nimport Menu from './components/menu';\nimport Hammer from './components/hammer';\nimport ScoreBoard from './components/score';\nimport Option from './components/option';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      mousePos: ['50%', '50%'],\n      deg: '-45deg',\n      score: 0,\n      holes: [0, 1, 2, 3, 4, 5, 6, 7, 8],\n      target: 9,\n      play: false,\n      time: 15,\n    }\n\n    this.timer = 0;\n    this.addScore = this.addScore.bind(this);\n    this.setClicked = this.setClicked.bind(this);\n    this.changeDeg = this.changeDeg.bind(this);\n    this.setMousePos = this.setMousePos.bind(this);\n    this.setPlay = this.setPlay.bind(this);\n    this.setTimer = this.setTimer.bind(this);\n    this.resetGame = this.resetGame.bind(this);\n  }\n\n  setMousePos(ev) {\n    this.setState({mousePos: [ev.pageX, ev.pageY]});\n  }\n\n  setClicked() {\n    this.changeDeg('-90deg');\n    setTimeout(() => this.changeDeg('-45deg'), 100);\n  }\n\n  setTimer() {\n    if(this.state.time === 0) {\n      clearInterval(this.timer);\n      this.setState({\n        play: false,\n        target: 9\n      })\n      alert(`Game Over!\\nScore: ${this.state.score}`)\n\n    } else {\n      const randomNum = Math.floor(Math.random() * 10);\n      this.setState(state => ({\n        time: state.time -1,\n        target: randomNum > 8? 8: randomNum,\n      }))\n    }\n  }\n\n  setPlay() {\n    if(!this.state.play) {\n      this.setState({\n        play: true,\n        time: 15,\n        score: 0\n      })\n      this.timer = setInterval(this.setTimer, 1000);\n\n    }\n  }\n\n\n  resetGame() {\n    clearInterval(this.timer);\n    this.setState({\n      play: false,\n      time: 15,\n      target: 9,\n      score: 0\n    })\n  }\n\n  changeDeg(deg){\n    this.setState({deg});\n  }\n\n  addScore(){\n    this.setState(state => ({score: state.score +1}));\n  }\n\n  render() {\n    return (\n      <div className=\"outer-wrapper\">\n        <Hammer play={this.state.play} mousePos={this.state.mousePos} deg={this.state.deg} />\n        <div className=\"inner-wrapper\">\n          <Menu setPlay={this.setPlay} play={this.state.play} />\n          <div className=\"upper\">\n            <Option setPlay={this.setPlay} resetGame={this.resetGame} />\n            <ScoreBoard score={this.state.score} time={this.state.time} />\n          </div>\n          <Arena\n            mousePos={this.state.mousePos}\n            score={this.state.score}\n            addScore={this.addScore}\n            setMousePos={this.setMousePos}\n            holes={this.state.holes}\n            setClicked={this.setClicked}\n            play={this.state.play}\n            target={this.state.target}\n            time={this.state.time} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}